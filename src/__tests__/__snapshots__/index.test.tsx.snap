// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Index test suite should render properly 1`] = `
<ContextProvider
  value={
    Object {
      "black": "#000",
      "failedColor": "#B91C1C",
      "primaryColor": "#06B6D4",
      "reduxColor": "#764ABC",
      "secondaryColor": "#1F2937",
      "secondaryDarkColor": "#111827",
      "secondaryLightColor": "#374151",
      "successColor": "#4D7C0F",
      "textColorFour": "#6B7280",
      "textColorOne": "#F9FAFB",
      "textColorThree": "#9CA3AF",
      "textColorTwo": "#D1D5DB",
      "warningColor": "#D97706",
      "white": "#FFF",
    }
  }
>
  <Component
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    visible={false}
  >
    <Component
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <Component
        style={
          Object {
            "height": "100%",
          }
        }
      >
        <Main
          clearAll={[Function]}
          maxRequests={100}
          nRequests={Array []}
          onPress={[Function]}
          onPressClose={[MockFunction]}
          onPressDetail={[Function]}
          reduxActions={Array []}
          rnRequests={Array []}
          testId="mainScreen"
        />
      </Component>
      <Component
        style={
          Object {
            "height": 0,
          }
        }
      >
        <Details
          item={
            ReduxAction {
              "_id": -1,
              "action": Object {
                "payload": "",
                "type": "__ERROR:UNDEFINED__",
              },
              "startTime": 1554632430000,
              "stringifiedAction": "",
              "type": "REDUX",
            }
          }
          onPressBack={[Function]}
          testId="detailScreen"
        />
      </Component>
    </Component>
  </Component>
</ContextProvider>
`;

exports[`Index test suite should render properly visible and enabled 1`] = `
<ContextProvider
  value={
    Object {
      "black": "#000",
      "failedColor": "#B91C1C",
      "primaryColor": "#06B6D4",
      "reduxColor": "#764ABC",
      "secondaryColor": "#1F2937",
      "secondaryDarkColor": "#111827",
      "secondaryLightColor": "#374151",
      "successColor": "#4D7C0F",
      "textColorFour": "#6B7280",
      "textColorOne": "#F9FAFB",
      "textColorThree": "#9CA3AF",
      "textColorTwo": "#D1D5DB",
      "warningColor": "#D97706",
      "white": "#FFF",
    }
  }
>
  <Component
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    visible={false}
  >
    <Component
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <Component
        style={
          Object {
            "height": "100%",
          }
        }
      >
        <Main
          clearAll={[Function]}
          maxRequests={100}
          nRequests={Array []}
          onPress={[Function]}
          onPressClose={[MockFunction]}
          onPressDetail={[Function]}
          reduxActions={Array []}
          rnRequests={Array []}
          testId="mainScreen"
        />
      </Component>
      <Component
        style={
          Object {
            "height": 0,
          }
        }
      >
        <Details
          item={
            ReduxAction {
              "_id": -1,
              "action": Object {
                "payload": "",
                "type": "__ERROR:UNDEFINED__",
              },
              "startTime": 1554632430000,
              "stringifiedAction": "",
              "type": "REDUX",
            }
          }
          onPressBack={[Function]}
          testId="detailScreen"
        />
      </Component>
    </Component>
  </Component>
</ContextProvider>
`;

exports[`Index test suite should render properly visible, enabled and maxRequest 1`] = `
<ContextProvider
  value={
    Object {
      "black": "#000",
      "failedColor": "#B91C1C",
      "primaryColor": "#06B6D4",
      "reduxColor": "#764ABC",
      "secondaryColor": "#1F2937",
      "secondaryDarkColor": "#111827",
      "secondaryLightColor": "#374151",
      "successColor": "#4D7C0F",
      "textColorFour": "#6B7280",
      "textColorOne": "#F9FAFB",
      "textColorThree": "#9CA3AF",
      "textColorTwo": "#D1D5DB",
      "warningColor": "#D97706",
      "white": "#FFF",
    }
  }
>
  <Component
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    visible={false}
  >
    <Component
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <Component
        style={
          Object {
            "height": "100%",
          }
        }
      >
        <Main
          clearAll={[Function]}
          maxRequests={20}
          nRequests={Array []}
          onPress={[Function]}
          onPressClose={[MockFunction]}
          onPressDetail={[Function]}
          reduxActions={Array []}
          rnRequests={Array []}
          testId="mainScreen"
        />
      </Component>
      <Component
        style={
          Object {
            "height": 0,
          }
        }
      >
        <Details
          item={
            ReduxAction {
              "_id": -1,
              "action": Object {
                "payload": "",
                "type": "__ERROR:UNDEFINED__",
              },
              "startTime": 1554632430000,
              "stringifiedAction": "",
              "type": "REDUX",
            }
          }
          onPressBack={[Function]}
          testId="detailScreen"
        />
      </Component>
    </Component>
  </Component>
</ContextProvider>
`;
