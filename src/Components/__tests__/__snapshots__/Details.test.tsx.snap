// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Details test suite Test Redux item should render Redux action properly 1`] = `
<Component
  style={
    Object {
      "height": "100%",
      "left": 0,
      "position": "absolute",
      "top": 0,
      "width": "100%",
    }
  }
>
  <Header
    style={
      Array [
        Object {
          "elevation": 0,
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
        },
        Object {
          "backgroundColor": "#111827",
        },
      ]
    }
  >
    <ForwardRef
      onPress={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderLeftWidth": 1,
            "height": 56,
            "justifyContent": "center",
            "width": 56,
          },
          Object {
            "borderLeftWidth": 0,
          },
        ]
      }
      testID="buttonBackToMainScreen"
    >
      <Icon
        color="#F9FAFB"
        name="arrow-left"
        size={24}
      />
    </ForwardRef>
    <Content
      color="#06B6D4"
      title="Netwatch"
      titleStyle={
        Object {
          "fontSize": 18,
        }
      }
    />
    <ForwardRef
      onPress={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderLeftWidth": 1,
            "height": 56,
            "justifyContent": "center",
            "width": 56,
          },
          Object {
            "borderLeftWidth": 0,
          },
        ]
      }
      testID="buttonShare"
    >
      <Icon
        color="#F9FAFB"
        name="download"
        size={24}
      />
    </ForwardRef>
  </Header>
  <Component
    contentContainerStyle={
      Object {
        "paddingBottom": 20,
        "paddingTop": 26,
      }
    }
    style={
      Object {
        "backgroundColor": "#1F2937",
      }
    }
  >
    <ActionDetails
      item={
        ReduxAction {
          "_id": 73,
          "action": Object {
            "payload": "{\\"data\\":\\"This is a test with a long payload, more than 100\\",\\"next\\":\\"characters to check if the viewmore button appears correctly.\\",\\"explain\\":\\"In fact, we need to have at least 100 characters to show this button\\",\\"and\\":\\" test if we can press the button\\"}",
            "type": "__ERROR:UNDEFINED__",
          },
          "extra": "",
          "startTime": 100,
          "stringifiedAction": "{ type: '__ERROR:UNDEFINED__', payload: '' }",
          "type": "REDUX",
        }
      }
      onPressViewMore={[Function]}
      reduxAction={
        Object {
          "label": "payload",
          "payload": "{\\"data\\":\\"This is a test with a long payload, more than 100\\",\\"next\\":\\"characters to check if the viewmore button appears correctly.\\",\\"explain\\":\\"In fact, we need to have at least 100 characters to show this button\\",\\"and\\":\\" test if we can press the button\\"}",
        }
      }
    />
  </Component>
  <Snackbar
    duration={3000}
    onDismiss={[Function]}
    style={
      Object {
        "backgroundColor": "#F9FAFB",
      }
    }
    theme={
      Object {
        "colors": Object {
          "surface": "#6B7280",
        },
      }
    }
    visible={false}
  />
</Component>
`;

exports[`Details test suite Test Request item should render properly with request & press backbutton 1`] = `
<Component
  style={
    Object {
      "height": "100%",
      "left": 0,
      "position": "absolute",
      "top": 0,
      "width": "100%",
    }
  }
>
  <Header
    style={
      Array [
        Object {
          "elevation": 0,
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
        },
        Object {
          "backgroundColor": "#111827",
        },
      ]
    }
  >
    <ForwardRef
      onPress={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderLeftWidth": 1,
            "height": 56,
            "justifyContent": "center",
            "width": 56,
          },
          Object {
            "borderLeftWidth": 0,
          },
        ]
      }
      testID="buttonBackToMainScreen"
    >
      <Icon
        color="#F9FAFB"
        name="arrow-left"
        size={24}
      />
    </ForwardRef>
    <Content
      color="#06B6D4"
      title="Netwatch"
      titleStyle={
        Object {
          "fontSize": 18,
        }
      }
    />
    <ForwardRef
      onPress={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderLeftWidth": 1,
            "height": 56,
            "justifyContent": "center",
            "width": 56,
          },
          Object {
            "borderLeftWidth": 0,
          },
        ]
      }
      testID="buttonShare"
    >
      <Icon
        color="#F9FAFB"
        name="download"
        size={24}
      />
    </ForwardRef>
  </Header>
  <Component
    contentContainerStyle={
      Object {
        "paddingBottom": 20,
        "paddingTop": 26,
      }
    }
    style={
      Object {
        "backgroundColor": "#1F2937",
      }
    }
  >
    <RequestDetails
      item={
        NRequest {
          "_id": 75,
          "dataSent": "{\\"data\\":\\"This is a test with a long body, more than 100\\",\\"next\\":\\"characters to check if the viewmore button appears correctly.\\",\\"explain\\":\\"In fact, we need to have at least 100 characters to show this button\\",\\"and\\":\\" test if we can press the button\\"}",
          "endTime": 1613477575757,
          "method": "GET",
          "readyState": 4,
          "requestHeaders": Object {
            "Content-Type": "application/json",
          },
          "response": "response",
          "responseContentType": "application/json",
          "responseHeaders": Object {
            "Content-Length": "0",
            "Content-Type": "application/json; charset=UTF-8",
            "Date": "Tue, 16 Feb 2021 12:12:55 GMT",
            "Sozu-Id": "51989c0c-ebe7-4574-913d-443477875da7",
          },
          "responseSize": 0,
          "responseType": "blob",
          "responseURL": "https://run.mocky.io/v3/1a2d092a-42b2-4a89-a44f-267935dc13e9",
          "shortUrl": "",
          "startTime": 1613477574742,
          "status": 200,
          "timeout": 0,
          "type": "RNR",
          "url": "https://run.mocky.io/v3/1a2d092a-42b2-4a89-a44f-267935dc13e9",
        }
      }
      onPressViewMoreRequest={[Function]}
      onPressViewMoreResponse={[Function]}
      setSnackBarMessage={[Function]}
      setSnackBarVisibility={[Function]}
    />
  </Component>
  <Snackbar
    duration={3000}
    onDismiss={[Function]}
    style={
      Object {
        "backgroundColor": "#F9FAFB",
      }
    }
    theme={
      Object {
        "colors": Object {
          "surface": "#6B7280",
        },
      }
    }
    visible={false}
  />
</Component>
`;
